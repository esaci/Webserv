==558989== Memcheck, a memory error detector
==558989== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==558989== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==558989== Command: ./webserv
==558989== Parent PID: 511164
==558989== 
==558989== Conditional jump or move depends on uninitialised value(s)
==558989==    at 0x43F0E0: server_data::setup_write_files(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (setup.cpp:129)
==558989==    by 0x405F28: server_data::_server() (server.cpp:59)
==558989==    by 0x40533C: main (main.cpp:18)
==558989== 
==559005== 
==559005== Process terminating with default action of signal 2 (SIGINT)
==558989== 
==558989== Process terminating with default action of signal 2 (SIGINT)
==558989==    at 0x4C92C6A: wait4 (wait4.c:27)
==559005==    at 0x4CBE002: read (read.c:26)
==559005==    by 0x4C40BCE: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:517)
==559005==    by 0x4C41FB5: _IO_default_uflow (genops.c:362)
==559005==    by 0x496D4B0: __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==559005==    by 0x497BB22: std::istream::sentry::sentry(std::istream&, bool) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==559005==    by 0x49273C6: std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, char*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==559005==    by 0x444615: ClassParsingClientRequest::set_cgi_env(server_data*, int) (cgi.cpp:301)
==559005==    by 0x444D77: ClassParsingClientRequest::basic_cgi(server_data*, int) (cgi.cpp:356)
==559005==    by 0x435A71: ClassParsingClientRequest::_post_cgi(server_data*, int) (post_response.cpp:23)
==559005==    by 0x410C18: server_data::_response(int) (response.cpp:68)
==559005==    by 0x43E4C3: server_data::setup_response(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (setup.cpp:71)
==559005==    by 0x405C99: server_data::_server() (server.cpp:53)
==558989==    by 0x444728: ClassParsingClientRequest::set_cgi_env(server_data*, int) (cgi.cpp:320)
==558989==    by 0x444D77: ClassParsingClientRequest::basic_cgi(server_data*, int) (cgi.cpp:356)
==558989==    by 0x435A71: ClassParsingClientRequest::_post_cgi(server_data*, int) (post_response.cpp:23)
==558989==    by 0x410C18: server_data::_response(int) (response.cpp:68)
==558989==    by 0x43E4C3: server_data::setup_response(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (setup.cpp:71)
==558989==    by 0x405C99: server_data::_server() (server.cpp:53)
==558989==    by 0x40533C: main (main.cpp:18)
==559005== 
==559005== HEAP SUMMARY:
==559005==     in use at exit: 10,087,616 bytes in 1,248 blocks
==559005==   total heap usage: 3,071 allocs, 1,823 frees, 10,325,295 bytes allocated
==559005== 
==558989== 
==558989== HEAP SUMMARY:
==558989==     in use at exit: 10,087,575 bytes in 1,246 blocks
==558989==   total heap usage: 3,068 allocs, 1,822 frees, 10,324,230 bytes allocated
==558989== 
==559005== LEAK SUMMARY:
==559005==    definitely lost: 0 bytes in 0 blocks
==559005==    indirectly lost: 0 bytes in 0 blocks
==559005==      possibly lost: 0 bytes in 0 blocks
==559005==    still reachable: 10,087,616 bytes in 1,248 blocks
==559005==         suppressed: 0 bytes in 0 blocks
==559005== Rerun with --leak-check=full to see details of leaked memory
==559005== 
==559005== Use --track-origins=yes to see where uninitialised values come from
==559005== For lists of detected and suppressed errors, rerun with: -s
==559005== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==558989== LEAK SUMMARY:
==558989==    definitely lost: 0 bytes in 0 blocks
==558989==    indirectly lost: 0 bytes in 0 blocks
==558989==      possibly lost: 0 bytes in 0 blocks
==558989==    still reachable: 10,087,575 bytes in 1,246 blocks
==558989==         suppressed: 0 bytes in 0 blocks
==558989== Rerun with --leak-check=full to see details of leaked memory
==558989== 
==558989== Use --track-origins=yes to see where uninitialised values come from
==558989== For lists of detected and suppressed errors, rerun with: -s
==558989== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
